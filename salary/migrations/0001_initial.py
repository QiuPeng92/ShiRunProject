# Generated by Django 2.1.1 on 2020-02-21 12:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=32, null=True, verbose_name='邮箱')),
                ('phone', models.IntegerField(blank=True, help_text='手机号', null=True, unique=True, verbose_name='手机号')),
                ('avatar', models.FileField(default='avatars/default.png ', upload_to='avatars/', verbose_name='头像')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '员工信息',
                'verbose_name_plural': '员工信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='车牌号码')),
                ('remark', models.CharField(blank=True, max_length=32, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '车辆信息',
                'verbose_name_plural': '车辆信息',
            },
        ),
        migrations.CreateModel(
            name='CarType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='分类名称')),
                ('remark', models.CharField(blank=True, max_length=32, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '车型',
                'verbose_name_plural': '车型',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='姓名')),
                ('remark', models.TextField(blank=True, help_text='备注', max_length=32, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '客户信息',
                'verbose_name_plural': '客户信息',
            },
        ),
        migrations.CreateModel(
            name='Customer2Mileage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shortmileage_standard', models.IntegerField(verbose_name='短程标准(公里)')),
                ('shortmileage_price', models.FloatField(verbose_name='短程单价(每吨)')),
                ('longmileage_price', models.FloatField(verbose_name='长途单价（每吨*公里）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('remark', models.CharField(blank=True, max_length=120, null=True, verbose_name='备注')),
                ('customer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_mileage', to='salary.Customer', verbose_name='客户')),
            ],
            options={
                'verbose_name': '客户里程价格信息',
                'verbose_name_plural': '客户里程价格信息',
            },
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inside_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='内部单号')),
                ('outside_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='外部单号')),
                ('drive_number', models.IntegerField(choices=[(1, '第一车'), (2, '第二车'), (3, '第三车'), (4, '第四车')], verbose_name='车次')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='支付金额')),
                ('deliver_time', models.DateField(auto_now_add=True, verbose_name='配送时间')),
                ('cabin', models.IntegerField(choices=[(1, '第一仓'), (2, '第二仓'), (3, '第三仓'), (4, '第四仓')], verbose_name='车舱编号')),
                ('paid_in_number', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='实发数')),
                ('remark', models.CharField(blank=True, max_length=32, null=True, verbose_name='备注')),
                ('status_audit', models.IntegerField(choices=[(1, '未审批'), (2, '已审批')], default=1, verbose_name='审核状态')),
                ('auditor', models.CharField(max_length=32, verbose_name='审核人')),
                ('short_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('long_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('earning', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('oiltank_number', models.IntegerField(blank=True, default=0, null=True, verbose_name='灌桶数')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_infocollection', to='salary.Car', verbose_name='车辆信息')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salary.Customer', verbose_name='发货单位')),
            ],
            options={
                'verbose_name': '填写信息表',
                'verbose_name_plural': '填写信息表',
            },
        ),
        migrations.CreateModel(
            name='MonthSalary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(max_length=32, verbose_name='驾驶员名称')),
                ('supercargo_name', models.CharField(max_length=32, verbose_name='押运员名称')),
                ('driver_salary', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('supercargo_salary', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('deliver_time', models.DateField(verbose_name='配送时间')),
                ('car_name', models.CharField(max_length=32, verbose_name='车号')),
                ('drive_number', models.IntegerField(default=1, verbose_name='车次')),
            ],
            options={
                'verbose_name': '员工每月工资汇总表',
                'verbose_name_plural': '员工每月工资汇总表',
            },
        ),
        migrations.CreateModel(
            name='Oil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='油品名称')),
                ('remark', models.CharField(blank=True, max_length=32, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '油品信息',
                'verbose_name_plural': '油品信息',
            },
        ),
        migrations.CreateModel(
            name='Oilwarehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='油库名称')),
                ('remark', models.CharField(blank=True, max_length=32, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '油库信息',
                'verbose_name_plural': '油库信息',
            },
        ),
        migrations.CreateModel(
            name='Petrolstation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='加油站')),
                ('number', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='加油站编号')),
                ('remark', models.CharField(blank=True, max_length=32, null=True, verbose_name='备注')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salary.Customer', verbose_name='客户')),
            ],
            options={
                'verbose_name': '加油站信息',
                'verbose_name_plural': '加油站信息',
            },
        ),
        migrations.CreateModel(
            name='Petrolstation12',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='加油站名称')),
                ('remark', models.CharField(blank=True, max_length=32, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '12元加油站表',
                'verbose_name_plural': '12元加油站表',
            },
        ),
        migrations.CreateModel(
            name='Petrolstation2oilwarehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mileage', models.IntegerField(verbose_name='员工里程')),
                ('customer_mileage', models.IntegerField(verbose_name='客户里程')),
                ('remark', models.CharField(blank=True, max_length=120, null=True, verbose_name='备注')),
                ('oilwarehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salary.Oilwarehouse', verbose_name='油库')),
                ('petrolstation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salary.Petrolstation', verbose_name='加油站')),
            ],
            options={
                'verbose_name': '加油站油库里程设置',
                'verbose_name_plural': '加油站油库里程设置',
            },
        ),
        migrations.CreateModel(
            name='Petrolstation30',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='加油站名称')),
                ('remark', models.CharField(blank=True, max_length=32, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '30元加油站表',
                'verbose_name_plural': '30元加油站表',
            },
        ),
        migrations.CreateModel(
            name='StaticInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inside_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='内部单号')),
                ('outside_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='外部单号')),
                ('customer_name', models.CharField(max_length=32, verbose_name='发货单位')),
                ('deliver_time', models.DateField(verbose_name='配送时间')),
                ('car_name', models.CharField(max_length=32, verbose_name='车号')),
                ('car_type', models.CharField(max_length=32, verbose_name='车型')),
                ('driver', models.CharField(max_length=32, verbose_name='驾驶员')),
                ('supercargo', models.CharField(max_length=32, verbose_name='押运员')),
                ('oilwarehouse', models.CharField(max_length=32, verbose_name='发货地址')),
                ('petrolstation', models.CharField(max_length=32, verbose_name='收货单位')),
                ('oil', models.CharField(max_length=32, verbose_name='油品')),
                ('drive_number', models.IntegerField(verbose_name='车次')),
                ('cabin', models.IntegerField(verbose_name='车舱编号')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='支付金额')),
                ('paid_in_number', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='实收数')),
                ('mileage', models.IntegerField(verbose_name='员工运距')),
                ('customer_mileage', models.IntegerField(verbose_name='客户运距')),
                ('shortmileage_standard', models.IntegerField(default=0, verbose_name='短程标准(公里)')),
                ('shortmileage_price', models.FloatField(default=0, verbose_name='短程单价(每吨)')),
                ('longmileage_price', models.FloatField(default=0, verbose_name='长途单价（每吨*公里）')),
                ('short_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('long_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('earning', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('oiltank_number', models.IntegerField(blank=True, default=0, null=True, verbose_name='油罐数')),
            ],
            options={
                'verbose_name': '通过审核表',
                'verbose_name_plural': '通过审核表',
            },
        ),
        migrations.AddField(
            model_name='information',
            name='oil',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salary.Oil', verbose_name='油品'),
        ),
        migrations.AddField(
            model_name='information',
            name='oilwarehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salary.Oilwarehouse', verbose_name='发货地址'),
        ),
        migrations.AddField(
            model_name='information',
            name='petrolstation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salary.Petrolstation', verbose_name='收货单位'),
        ),
        migrations.AddField(
            model_name='car',
            name='car_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_type', to='salary.CarType', verbose_name='车型'),
        ),
        migrations.AddField(
            model_name='car',
            name='driver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_drivers', to=settings.AUTH_USER_MODEL, verbose_name='驾驶员'),
        ),
        migrations.AddField(
            model_name='car',
            name='supercargo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_supercargos', to=settings.AUTH_USER_MODEL, verbose_name='押运员'),
        ),
        migrations.AlterUniqueTogether(
            name='petrolstation2oilwarehouse',
            unique_together={('petrolstation', 'oilwarehouse')},
        ),
        migrations.AlterUniqueTogether(
            name='information',
            unique_together={('deliver_time', 'cabin', 'drive_number', 'car')},
        ),
    ]
